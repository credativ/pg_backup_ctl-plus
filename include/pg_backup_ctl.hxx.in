#ifndef __PGBACKUPCTL_H__
#define __PGBACKUPCTL_H__

/*
 * Version numbers
 */
#define GITREV @GITREV@
#define PG_BACKUP_CTL_MAJOR @PG_BACKUP_CTL_MAJOR@
#define PG_BACKUP_CTL_MINOR @PG_BACKUP_CTL_MINOR@

/*
 * Compiled in sqlite database file
 */
#define PG_BACKUP_CTL_SQLITE "@PG_BACKUP_CTL_SQLITE@"

/*
 * We compile with zlib support
 */
@PG_BACKUP_CTL_HAS_ZLIB@

/*
 * We compile with zstandard compression support
 */
@PG_BACKUP_CTL_HAS_ZSTD@

/*
 * Endianess of target platform
 */
@PG_BACKUP_CTL_BIG_ENDIAN@

/*
 * Use up to this number of workers for background jobs.
 */
#define PGBCKCTL_MAX_WORKERS 256

/*
 * Maximum number of allowed parallel copy instances
 *
 * This setting is currently used in connection with
 * IOUringCopyManager and controls the number of paired copy
 * threads for read/write. So the total number of threads is
 *
 * #NUMBER_OF_THREADS = MAX_PARALLEL_COPY_INSTANCES * 2
 */
#define MAX_PARALLEL_COPY_INSTANCES 64

#define MAX_WORKER_INSTRUMENTATION_SLOTS 5
#define MAX_WORKER_CHILDS 5

/*
 * FreeBSD doesn't have shmatt_t defined (used
 * within shmstat structure for IPC_STAT in shmctl()).
 */
@HAVE_SHMATT_T_TYPE@
#ifndef HAVE_SHMATT_T_TYPE
#define shmatt_t int
#endif

/*
 * Define io_uring support via liburing
 */
@PG_BACKUP_CTL_HAS_LIBURING@

#endif
